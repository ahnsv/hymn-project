{"version":3,"sources":["components/HymnHeader/HymnHeader.js","components/HymnLayout/HymnNewLayout.js","components/HymnLayout/HymnTodoLayout.js","App.js","serviceWorker.js","index.js","assets/icons/hamburger.svg","assets/icons/calendar.svg","assets/icons/star.svg","assets/icons/move.svg","assets/icons/gauge.svg"],"names":["HymnHeader","_ref","title","left","right","react_default","a","createElement","className","defaultProps","src","hamburger","alt","calendar","HymnNewLayout","theme","color","children","concat","style","backgroundColor","HymnTodoLayout","props","list","ref","refProp","map","l","idx","key","star","move","App","gauge","_useState","useState","_useState2","Object","slicedToArray","todoToggle","setTodoToggle","_useState3","_useState4","handleElements","setHandleElements","todoLayout","document","querySelector","todoRef","useRef","dock","dockRef","useEffect","setTimeout","current","opacity","transition","display","HymnLayout_HymnNewLayout","components_HymnHeader_HymnHeader","es","onSwipedUp","HymnLayout_HymnTodoLayout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","require","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d91d2e4d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles/HymnHeader.scss\";\r\nimport hamburger from \"../../assets/icons/hamburger.svg\";\r\nimport calendar from \"../../assets/icons/calendar.svg\";\r\n\r\nconst HymnHeader = ({ title, left, right }) => {\r\n  return (\r\n    <div className={`hymn-header`}>\r\n      {/* make img to svg */}\r\n      <div className={`header--left`}>\r\n        {left}\r\n      </div>\r\n      <div className={`header--title`}>\r\n        {title}\r\n      </div>\r\n      <div className={`header--right`}>\r\n        {right}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHymnHeader.defaultProps = {\r\n  left: (<img src={hamburger} alt={`hamburger`}/>),\r\n  title: \"HYMN\",\r\n  right: (<img src={calendar} alt={`calendar`}/>)\r\n};\r\n\r\nexport default HymnHeader;","import React from \"react\";\r\nimport \"./styles/HymnNewLayout.scss\"\r\n\r\n/**\r\n * @description toggle schedules with scroll\r\n * @constructor\r\n * @param theme ['full', 'half']\r\n * @param color {string}\r\n */\r\nconst HymnNewLayout = ({ theme, color, children }) => {\r\n  return (\r\n    <div className={`hymn-new-layout`}>\r\n      <div className={`background-clip ${theme}`} style={{backgroundColor: color}}/>\r\n      {\r\n        children\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nHymnNewLayout.defaultProps = {\r\n  color: \"#00A3EE\",\r\n  theme: \"full\"\r\n};\r\n\r\nexport default HymnNewLayout","import React from \"react\";\r\nimport \"./styles/HymnTodoLayout.scss\";\r\nimport star from \"../../assets/icons/star.svg\";\r\nimport move from \"../../assets/icons/move.svg\";\r\n\r\nconst HymnTodoLayout = (props) => {\r\n  const list = props.list;\r\n  return (\r\n    <div className={`hymn-todo-layout`} style={props.style} ref={props.refProp}>\r\n      {\r\n        list.map((l, idx) => (\r\n          <div className={`hymn-todo-list`} key={idx}>\r\n            <img src={star} alt={`star`}/>\r\n            <div className={`todo-date`}>0512</div>\r\n            <div className={`todo-content`}>{l}</div>\r\n            <img src={move} alt={`move`}/>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nHymnTodoLayout.defaultProps = {\r\n  list: [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n};\r\n\r\nexport default HymnTodoLayout;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.scss\";\r\nimport HymnHeader from \"./components/HymnHeader/HymnHeader\";\r\nimport HymnNewLayout from \"./components/HymnLayout/HymnNewLayout\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport HymnTodoLayout from \"./components/HymnLayout/HymnTodoLayout\";\r\nimport { HymnSchedulerWithDialog } from \"./components/HymnScheduler/HymnScheduler\";\r\nimport gauge from \"./assets/icons/gauge.svg\";\r\n\r\nconst App = (props) => {\r\n  const imgGauge = (<img src={gauge} alt={`gauge`}/>);\r\n  const [todoToggle, setTodoToggle] = useState(false);\r\n  const [handleElements, setHandleElements] = useState(null);\r\n  const todoLayout = document.querySelector(\".todo-layout\");\r\n  const todoRef = useRef(todoLayout);\r\n  const dock = document.querySelector(\".main-dock\");\r\n  const dockRef = useRef(dock);\r\n  useEffect(() => {\r\n    if (todoToggle) {\r\n      setTimeout(() => {\r\n        setHandleElements({\r\n          theme: \"half\",\r\n          color: \"#f5d908\"\r\n        });\r\n        todoRef.current.style.opacity = \"1\";\r\n        todoRef.current.style.transition = \"opacity 500ms linear\";\r\n        dockRef.current.style.display = \"none\";\r\n      }, 300);\r\n    }\r\n  }, [todoToggle]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <HymnNewLayout {...handleElements}>\r\n        <HymnHeader/>\r\n        <Swipeable onSwipedUp={() => setTodoToggle(true)}>\r\n          <div className={`main-dock ${todoToggle ? \"toggled\" : \"\"}`} ref={dockRef}/>\r\n        </Swipeable>\r\n        <HymnTodoLayout refProp={todoRef} style={{ opacity: \"0\" }}/>\r\n      </HymnNewLayout>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/hamburger.d2029f73.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.17fe5d4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.1bff2af5.svg\";","module.exports = __webpack_public_path__ + \"static/media/move.087dd08b.svg\";","module.exports = __webpack_public_path__ + \"static/media/gauge.ec97192c.svg\";"],"sourceRoot":""}