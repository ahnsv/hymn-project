{"version":3,"sources":["components/HymnHeader/HymnHeader.js","components/HymnLayout/HymnNewLayout.js","components/HymnLayout/HymnTodoLayout.js","components/HymnScheduler/HymnSchedulerDayNotifiers.js","components/HymnScheduler/HymnSchedulerDay.js","components/HymnScheduler/HymnSchedulerMonthNav.js","components/HymnScheduler/HymnSchedulerMonth.js","components/HymnScheduler/HymnSchedulers.js","App.js","serviceWorker.js","index.js","assets/icons/hamburger.svg","assets/icons/calendar.svg","assets/icons/star.svg","assets/icons/move.svg","assets/icons/gauge.svg"],"names":["HymnHeader","_ref","title","left","right","linkProp","react_default","a","createElement","className","react_router_dom","to","defaultProps","src","hamburger","alt","calendar","HymnNewLayout","theme","color","children","concat","style","backgroundColor","HymnTodoLayout","props","list","ref","refProp","map","l","idx","key","star","move","HymnSchedulerDayNotifiers","dateData","scheduleData","queried","date","Date","important","category","colorMap","military","notifiersColorScheme","$militaryColor","goal","$goalsColor","break","$breaksColor","anniversary","$anniversariesColor","q","height","width","cx","cy","r","strokeWidth","fill","HymnSchedulerDay","index","today","id","handleClick","handleHover","isCurrent","isNext","isPrev","getDate","getMonth","getDay","onClick","e","onMouseEnter","HymnScheduler_HymnSchedulerDayNotifiers","x1","y1","x2","y2","stroke","strokeLinecap","HymnSchedulerMonthNav","handlePrev","handleNext","isShortVersion","_useState","useState","_useState2","Object","slicedToArray","mode","Fragment","getYear","HymnSchedulerMonth","indexDate","setSelectProp","setIndex","_useState3","_useState4","select","setSelect","_useState5","_useState6","selectedDOM","setSelectedDOM","persist","target","useEffect","classList","add","document","querySelector","remove","startDate","startOfMonth","endDate","endOfMonth","prevMonthIdx","subDays","nextMonthIdx","addDays","daysInMonth","eachDay","d","HymnScheduler_HymnSchedulerDay","prevMthDays","startOfWeek","nextMthDays","endOfWeek","subMonths","addMonths","HymnScheduler_HymnSchedulerMonthNav","react_transition_group","timeout","classNames","unmountOnExit","mountOnEnter","es","onSwipedRight","onSwipedLeft","HymnSchedulerWithDialog","HymnScheduler_HymnSchedulerMonth","App","imgGauge","gauge","todoToggle","setTodoToggle","handleElements","setHandleElements","todoLayout","todoRef","useRef","dock","dockRef","setTimeout","current","opacity","transition","display","Home","HymnLayout_HymnNewLayout","components_HymnHeader_HymnHeader","onSwipedUp","HymnLayout_HymnTodoLayout","Scheduler","HymnSchedulers_HymnSchedulerWithDialog","react_router","render","_ref2","location","pathname","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","require","ReactDOM","src_App_0","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.28c443c7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles/HymnHeader.scss\";\r\nimport hamburger from \"../../assets/icons/hamburger.svg\";\r\nimport calendar from \"../../assets/icons/calendar.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HymnHeader = ({ title, left, right, linkProp }) => {\r\n  return (\r\n    <div className={`hymn-header`}>\r\n      {/* make img to svg */}\r\n      <div className={`header--left`}>\r\n        {left}\r\n      </div>\r\n      <div className={`header--title`}>\r\n        <Link to={`/`}>\r\n          {title}\r\n        </Link>\r\n      </div>\r\n      <div className={`header--right`}>\r\n        <Link to={linkProp}>\r\n          {right}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHymnHeader.defaultProps = {\r\n  left: (<img src={hamburger} alt={`hamburger`}/>),\r\n  title: \"HYMN\",\r\n  right: (<img src={calendar} alt={`calendar`}/>),\r\n  linkProp: \"/\"\r\n};\r\n\r\nexport default HymnHeader;","import React from \"react\";\r\nimport \"./styles/HymnNewLayout.scss\"\r\n\r\n/**\r\n * @description toggle schedules with scroll\r\n * @constructor\r\n * @param theme ['full', 'half']\r\n * @param color {string}\r\n */\r\nconst HymnNewLayout = ({ theme, color, children }) => {\r\n  return (\r\n    <div className={`hymn-new-layout`}>\r\n      <div className={`background-clip ${theme}`} style={{backgroundColor: color}}/>\r\n      {\r\n        children\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nHymnNewLayout.defaultProps = {\r\n  color: \"#00A3EE\",\r\n  theme: \"full\"\r\n};\r\n\r\nexport default HymnNewLayout","import React from \"react\";\r\nimport \"./styles/HymnTodoLayout.scss\";\r\nimport star from \"../../assets/icons/star.svg\";\r\nimport move from \"../../assets/icons/move.svg\";\r\n\r\nconst HymnTodoLayout = (props) => {\r\n  const list = props.list;\r\n  return (\r\n    <div className={`hymn-todo-layout`} style={props.style} ref={props.refProp}>\r\n      {\r\n        list.map((l, idx) => (\r\n          <div className={`hymn-todo-list`} key={idx}>\r\n            <img src={star} alt={`star`}/>\r\n            <div className={`todo-date`}>0512</div>\r\n            <div className={`todo-content`}>{l}</div>\r\n            <img src={move} alt={`move`}/>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nHymnTodoLayout.defaultProps = {\r\n  list: [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n};\r\n\r\nexport default HymnTodoLayout;","import React from \"react\";\r\nimport { notifiersColorScheme } from \"./HymnSchedulerDay\";\r\n\r\n/**\r\n * @description Input current selected date and schedule data from db\r\n * @description returns notifiers in jsx\r\n * @param {Object, Object} {dateData, scheduleData}\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport function HymnSchedulerDayNotifiers({ dateData, scheduleData }) {\r\n  // Need to be shared with to-do layer\r\n  const queried = [\r\n    {\r\n      title: \"밥먹기\",\r\n      date: new Date(2019, 4, 16),\r\n      important: true,\r\n      category: \"military\"\r\n    },\r\n    {\r\n      title: \"밥먹기2\",\r\n      date: new Date(2019, 4, 16),\r\n      important: true,\r\n      category: \"goal\"\r\n    },\r\n    // {\r\n    //   title: \"밥먹기2\",\r\n    //   date: new Date(2019, 4, 16),\r\n    //   important: true,\r\n    //   category: \"anniversary\"\r\n    // }\r\n  ];\r\n  const colorMap = {\r\n    \"military\": notifiersColorScheme.$militaryColor,\r\n    \"goal\": notifiersColorScheme.$goalsColor,\r\n    \"break\": notifiersColorScheme.$breaksColor,\r\n    \"anniversary\": notifiersColorScheme.$anniversariesColor\r\n  };\r\n  return (\r\n    <div className={`day-schedule-notifiers`}>\r\n      {\r\n        queried && queried.map((q, idx) => {\r\n            return (\r\n              <svg height=\"6\" width=\"6\" key={idx}>\r\n                <circle cx={`3`} cy={`3`} r=\"2\" strokeWidth=\"1\" fill={colorMap[q.category]}/>\r\n              </svg>\r\n            );\r\n          }\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HymnSchedulerDayNotifiers;","import React from \"react\";\r\nimport { getDate, getMonth, getDay } from \"date-fns\";\r\nimport \"./styles/HymnSchedulerDay.scss\";\r\nimport HymnSchedulerDayNotifiers from \"./HymnSchedulerDayNotifiers\";\r\n\r\nexport const notifiersColorScheme = {\r\n  $goalsColor: \"#F5D908\",\r\n  $militaryColor: \"#00A3EE\",\r\n  $breaksColor: \"#D80351\",\r\n  $anniversariesColor: \"#88A80D\"\r\n};\r\n\r\nconst HymnSchedulerDay = ({ index, today, date, id, idx, handleClick, handleHover, isCurrent, isPrev, isNext }) => {\r\n  // TODO: pull schedule data from indexedDB\r\n  const dailyScheduleData = {};\r\n  return (\r\n    <div\r\n      className={`${isCurrent ? \"current-mth-days\" : isNext ? \"next-mth-days\" : \"prev-mth-days\"} \r\n      ${(index === today) ? (idx === getDate(today) - 1)\r\n        ? \"today\" : \"\" : (idx === getDate(today) - 1 && getMonth(date) === getMonth(today))\r\n        ? \"today\" : \"\"} scheduler-day`}\r\n      id={id}\r\n      key={idx}\r\n      style={{ \"color\": `${getDay(date) === 0 ? \"#D80351\" : getDay(date) === 6 ? \"#00A3EE\" : \"\"}` }}\r\n      onClick={(e) => handleClick(e, date)}\r\n      onMouseEnter={handleHover}\r\n    >\r\n      <div className={`day-schedule-notifiers`}>\r\n        <HymnSchedulerDayNotifiers/>\r\n      </div>\r\n      {getDate(date)}\r\n      <div className=\"day-schedule-notifiers-range\">\r\n        <svg height=\"20\" width=\"100\">\r\n          <line x1=\"10\" y1=\"3\" x2=\"40\" y2=\"3\" stroke={notifiersColorScheme.$breaksColor} strokeWidth={`4`} strokeLinecap={`round`}/>\r\n          <line x1=\"10\" y1=\"9\" x2=\"50\" y2=\"9\" stroke={notifiersColorScheme.$goalsColor} strokeWidth={`4`} strokeLinecap={`round`}/>\r\n        </svg>\r\n      </div>\r\n    </div>);\r\n};\r\n\r\nexport default HymnSchedulerDay;","import React, { useState } from \"react\";\r\nimport { getYear, getMonth } from \"date-fns\";\r\n\r\nconst HymnSchedulerMonthNav = ({ index, handlePrev, handleNext, isShortVersion }) => {\r\n  /**\r\n   * There are three stages: month, year, decade\r\n   */\r\n  const [mode, setMode] = useState(\"month\");\r\n  return (\r\n    <div className={`scheduler-month-nav ${isShortVersion ? \"short\" : \"\"}`}>\r\n      {\r\n        mode === \"month\" && (\r\n          <>\r\n            <div className={`scheduler-nav--prev`} onClick={handlePrev}>\r\n              {`<`}\r\n            </div>\r\n            <div className=\"scheduler-indicator\">\r\n              <div className={`scheduler-month-year`}>\r\n                {getYear(index)}\r\n              </div>\r\n              <div className={`scheduler-month-month`}>\r\n                {getMonth(index) + 1}\r\n              </div>\r\n            </div>\r\n            <div className={`scheduler-nav--next`} onClick={handleNext}>\r\n              {`>`}\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n      {\r\n        mode === 'year' && (\r\n          <>\r\n\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HymnSchedulerMonthNav;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  addDays,\r\n  addMonths,\r\n  eachDay,\r\n  endOfMonth,\r\n  endOfWeek,\r\n  getDate,\r\n  startOfMonth,\r\n  startOfWeek,\r\n  subDays,\r\n  subMonths\r\n} from \"date-fns\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport \"./styles/HymnScheduler.scss\";\r\nimport \"./styles/HymnSchedulerInput.scss\";\r\nimport HymnSchedulerDay from \"./HymnSchedulerDay\";\r\nimport HymnSchedulerMonthNav from \"./HymnSchedulerMonthNav\";\r\nimport {TransitionGroup, CSSTransition, Transition} from 'react-transition-group'\r\n\r\n\r\n/**\r\n * TODO: refactor this to more reusable component\r\n * TODO: how to connect multiple monthly calendar like one component\r\n * @description Hymn Scheduler Monthly Calendar\r\n * @description Display schedules on monthly basis\r\n * @param today {Date}\r\n * @param indexDate\r\n * @param isShortVersion\r\n * @param setSelectProp\r\n * @constructor\r\n */\r\nconst HymnSchedulerMonth = ({ today, indexDate, isShortVersion, setSelectProp }) => {\r\n  const [index, setIndex] = useState((indexDate) ? indexDate : today);\r\n  const [select, setSelect] = useState(null);\r\n  const [selectedDOM, setSelectedDOM] = useState(null);\r\n  useEffect(() => {\r\n    if (selectedDOM) {\r\n      selectedDOM.classList.add(\"selected\");\r\n    }\r\n    return () => {\r\n      if (document.querySelector(\".selected\")) {\r\n        document.querySelector(\".selected\").classList.remove(\"selected\");\r\n      }\r\n    };\r\n  }, [select, selectedDOM]);\r\n\r\n  function handleClick(e, date) {\r\n    e.persist();\r\n    setSelect(date);\r\n    setSelectedDOM(e.target)\r\n  }\r\n\r\n  const startDate = startOfMonth(index);\r\n  const endDate = endOfMonth(index);\r\n  const prevMonthIdx = subDays(startDate, 1);\r\n  const nextMonthIdx = addDays(endDate, 1);\r\n  const daysInMonth = eachDay(startDate, endDate).map((d, idx) => (\r\n    <HymnSchedulerDay today={today} index={index} idx={idx} key={idx} id={`day-${idx + 1}`} date={d} isCurrent={true}\r\n                      handleClick={handleClick}/>\r\n  ));\r\n  const prevMthDays = eachDay(startOfWeek(prevMonthIdx), prevMonthIdx).map((d, idx) => (\r\n    <HymnSchedulerDay today={today} index={index} idx={`prev-day-${idx}`} key={`prev-${idx}`} date={d} isPrev={true}\r\n                      handleClick={handleClick}/>\r\n  ));\r\n  const nextMthDays = eachDay(nextMonthIdx, endOfWeek(nextMonthIdx)).map((d, idx) => (\r\n    <HymnSchedulerDay today={today} index={index} idx={`next-day-${idx}`} key={`next-${idx}`} date={d} isNext={true}\r\n                      handleClick={handleClick}/>\r\n  ));\r\n  const handlePrev = () => {\r\n    setIndex(index => subMonths(index, 1));\r\n  };\r\n  const handleNext = () => {\r\n    setIndex(index => addMonths(index, 1));\r\n  };\r\n  return (\r\n    <div className=\"hymn-scheduler-month\">\r\n      <HymnSchedulerMonthNav index={index} handleNext={handleNext} handlePrev={handlePrev} isShortVersion={isShortVersion}/>\r\n      <TransitionGroup className={`months-transition`}>\r\n        <CSSTransition timeout={500} key={index} classNames={`months`} unmountOnExit={true} mountOnEnter={true}>\r\n          <Swipeable onSwipedRight={handlePrev} onSwipedLeft={handleNext} className={`scheduler-month-wrapper`}>\r\n            {\r\n              [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"].map((d, idx) => (\r\n                <div key={idx}\r\n                     className={`day-indexes`}\r\n                     style={{ \"color\": `${idx === 0 ? \"#D80351\" : idx === 6 ? \"#00A3EE\" : \"inherit\"}` }}>\r\n                  <div>{d}</div>\r\n                </div>\r\n              ))\r\n            }\r\n            {prevMthDays}\r\n            {daysInMonth}\r\n            {nextMthDays}\r\n          </Swipeable>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n      <div className={`hymn-month-to-dos`}>\r\n        <div className=\"to-do-date\">{getDate(select)}</div>\r\n        <div className=\"to-do-content\">일정이 없습니다.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHymnSchedulerMonth.defaultProps = {\r\n  today: new Date(),\r\n  indexDate: new Date(),\r\n  isShortVersion: false,\r\n  setSelectProp: null\r\n};\r\n\r\nexport default HymnSchedulerMonth;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { addMonths, format } from \"date-fns\";\r\nimport \"./styles/HymnScheduler.scss\";\r\nimport \"./styles/HymnSchedulerInput.scss\";\r\nimport HymnSchedulerWeek from \"./HymnSchedulerWeek\";\r\nimport HymnSchedulerMonth from \"./HymnSchedulerMonth\";\r\n/*\r\n* Hymn Scheduler Routes w/ components\r\n* */\r\n\r\nconst HymnSchedulerOriginal = (props) => {\r\n  const today = new Date();\r\n  return (\r\n    <div className=\"hymn-scheduler\">\r\n      <HymnSchedulerMonth today={today}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HymnSchedulerVertical = (props) => {\r\n  const today = new Date();\r\n  const { setSelect } = props;\r\n  const [numOfMonths, setNumOfMonths] = useState(2);\r\n  const range = (num) => {\r\n    let res = [];\r\n    for (let i = 0; i <= num; i++) {\r\n      res.push(\r\n        <HymnSchedulerMonth\r\n          isShortVersion={true}\r\n          indexDate={addMonths(today, i)}\r\n          today={today}\r\n          key={i}\r\n          setSelectProp={setSelect}\r\n        />);\r\n    }\r\n    return res;\r\n  };\r\n  return (\r\n    <div className={`hymn-scheduler-vertical`}>\r\n      {range(numOfMonths)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HymnSchedulerWithWeekly = () => {\r\n  const today = new Date();\r\n  return (\r\n    <div className=\"hymn-scheduler\">\r\n      <HymnSchedulerMonth today={today}/>\r\n      <HymnSchedulerWeek today={today}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HymnSchedulerWithDialog = (props) => {\r\n  const today = new Date();\r\n  return (\r\n    <div className=\"hymn-scheduler\">\r\n      <HymnSchedulerMonth\r\n        today={today}\r\n      />\r\n      <button className={`add-schedule`}>+</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst HymnSchedulerCalendarWithInput = (props) => {\r\n  // TODO: Pass start date with pros, input to div\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [select, setSelect] = useState(null);\r\n  const dateHandled = (possibleDate) => (possibleDate instanceof Date)\r\n    ? format(possibleDate, \"YYYY-MM-DD\")\r\n    : \"날짜를 입력해주세요\";\r\n  useEffect(() => {\r\n    if (!select) {\r\n\r\n    } else if (select.length <= 1) {\r\n      setStartDate(select[0]);\r\n    } else if (select.length === 2) {\r\n      console.log(select);\r\n      setEndDate(select[1]);\r\n    } else {\r\n      setStartDate(select[3]);\r\n      setEndDate(null);\r\n      setSelect(null);\r\n    }\r\n    console.log(select, startDate, endDate);\r\n  }, [select]);\r\n\r\n  return (\r\n    <div className={`hymn-scheduler hymn-scheduler-calendar-with-input`}>\r\n      <div className=\"inputs\">\r\n        <div className=\"start-date\">\r\n          <label htmlFor={`input--start-date`}>시작일</label>\r\n          <div\r\n            id={`start-date`}\r\n          >{dateHandled(startDate)}</div>\r\n        </div>\r\n        <div className=\"end-date\">\r\n          <label htmlFor={`input--end-date`}>종료일</label>\r\n          <div id={`input--end-date`}>{dateHandled(endDate)}</div>\r\n        </div>\r\n      </div>\r\n      <HymnSchedulerVertical setSelect={setSelect}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { HymnSchedulerOriginal, HymnSchedulerWithDialog, HymnSchedulerWithWeekly, HymnSchedulerCalendarWithInput };\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.scss\";\r\nimport HymnHeader from \"./components/HymnHeader/HymnHeader\";\r\nimport HymnNewLayout from \"./components/HymnLayout/HymnNewLayout\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport HymnTodoLayout from \"./components/HymnLayout/HymnTodoLayout\";\r\nimport { HymnSchedulerWithDialog } from \"./components/HymnScheduler/HymnSchedulers\";\r\nimport gauge from \"./assets/icons/gauge.svg\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\n\r\nconst App = (props) => {\r\n  const imgGauge = (<img src={gauge} alt={`gauge`}/>);\r\n  const [todoToggle, setTodoToggle] = useState(false);\r\n  const [handleElements, setHandleElements] = useState(null);\r\n  const todoLayout = document.querySelector(\".todo-layout\");\r\n  const todoRef = useRef(todoLayout);\r\n  const dock = document.querySelector(\".main-dock\");\r\n  const dockRef = useRef(dock);\r\n  // TODO: bring back to initial state when transition happens\r\n  useEffect(() => {\r\n    if (todoToggle) {\r\n      setTimeout(() => {\r\n        setHandleElements({\r\n          theme: \"half\",\r\n          color: \"#f5d908\"\r\n        });\r\n        todoRef.current.style.opacity = \"1\";\r\n        todoRef.current.style.transition = \"opacity 500ms linear\";\r\n        dockRef.current.style.display = \"none\";\r\n      }, 300);\r\n      return () => {\r\n        if (todoToggle) {\r\n          setHandleElements(null)\r\n        }\r\n      }\r\n    }\r\n  }, [todoToggle]);\r\n  const Home = ({linkProp}) => {\r\n    return (\r\n      <HymnNewLayout {...handleElements}>\r\n        <HymnHeader linkProp={linkProp}/>\r\n        <Swipeable onSwipedUp={() => setTodoToggle(true)}>\r\n          <div className={`main-dock ${todoToggle ? \"toggled\" : \"\"}`} ref={dockRef}/>\r\n        </Swipeable>\r\n        <HymnTodoLayout refProp={todoRef} style={{ opacity: \"0\" }}/>\r\n      </HymnNewLayout>\r\n    );\r\n  };\r\n\r\n  const Scheduler = () => {\r\n    return (\r\n      <HymnNewLayout theme={`half`}>\r\n        <HymnHeader title={`CALENDAR`} right={imgGauge}/>\r\n        <HymnSchedulerWithDialog/>\r\n      </HymnNewLayout>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Route render={({location}) => (\r\n          <TransitionGroup>\r\n            <CSSTransition classNames={`page`} key={location.pathname} timeout={500}>\r\n              <Switch>\r\n                <Route exact path={`/`} render={() => (<Home linkProp={`/scheduler`}/>)}/>\r\n                <Route path={`/scheduler`} component={Scheduler}/>\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        )}/>\r\n      </Router>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/hamburger.d2029f73.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.17fe5d4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.1bff2af5.svg\";","module.exports = __webpack_public_path__ + \"static/media/move.087dd08b.svg\";","module.exports = __webpack_public_path__ + \"static/media/gauge.ec97192c.svg\";"],"sourceRoot":""}