{"version":3,"file":"main.0ca0773ce352510ab6a8.bundle.js","sources":["webpack:///./src/components/HymnLayout/HymnLayout.js"],"sourcesContent":["import React, { useEffect, useReducer } from \"react\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\n\r\nconst HymnLayout = (props) => {\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'Up':\r\n        if (state.row === props.children.length - 1) { return { row: state.row, stage: state.stage }; }\r\n        return { row: state.row + 1, stage: state.stage };\r\n      case 'Down':\r\n        if (state.row === 0) return { row: state.row, stage: state.stage };\r\n        return { row: state.row - 1, stage: state.stage };\r\n      case 'Left':\r\n        // TODO: figure out how to get length of children's children\r\n        return { stage: state.stage + 1, row: state.row };\r\n      case 'Right':\r\n        if (state.row === 0) return { row: state.row, stage: state.stage };\r\n        return { stage: state.stage - 1, row: state.row };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, { row: 0, stage: 0 });\r\n  useEffect(() => {\r\n    console.log('rendered!');\r\n  }, [state]);\r\n  return (\r\n    <div className=\"hymn-layout\">\r\n      <Swipeable\r\n        onSwipedRight={() => dispatch({ type: 'Right' })}\r\n        onSwipedLeft={() => dispatch({ type: 'Left' })}\r\n        onSwipedUp={() => dispatch({ type: 'Up' })}\r\n        onSwipedDown={() => dispatch({ type: 'Down' })}\r\n      >\r\n        <TransitionGroup className=\"layout-transition\">\r\n          {props.children[state.row]\r\n          && React.cloneElement(props.children[state.row], {\r\n            in: true,\r\n            stage: state.stage,\r\n            row: state.row,\r\n          })}\r\n        </TransitionGroup>\r\n      </Swipeable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HymnLayout;\r\n"],"mappings":"AAIA","sourceRoot":""}